**FILTER()**

1. Dado o array `const notas = [4, 7, 9, 3, 10, 5];`, filtre apenas as notas maiores ou iguais a 7.
2. Dado o array `const palavras = ["sol", "mar", "computador", "lua", "código"];`, filtre apenas as palavras com mais de 4 letras.
3. Dado o array `const animais = ["gato", "cachorro", "peixe", "elefante", "abelha"];`, filtre apenas os animais cujo nome começa com a letra **"c"**.
---

**FIND()**

1. Dado o array `const filmes = ["Avatar", "Batman", "Vingadores", "Matrix", "Barbie"];`, encontre o primeiro filme que começa com a letra **"B"**.
2. Dado o array `const numeros = [2, 4, 6, 9, 12, 15];`, encontre o primeiro número ímpar.
3. Dado o array `const alunos = [{nome: "Ana", nota: 8}, {nome: "Carlos", nota: 5}, {nome: "Beatriz", nota: 9}];`, encontre o primeiro aluno com nota **maior ou igual a 7**.
---

**MAP()**

1. Dado o array `const temperaturas = [20, 25, 30, 15];`, crie um novo array convertendo para Fahrenheit (`C * 1.8 + 32`).
2. Dado o array `const produtos = ["camisa", "calça", "sapato"];`, crie um novo array com os nomes em maiúsculo e prefixo `"Produto: "`.
3. Dado o array `const numeros = [1, 2, 3, 4];`, crie um novo array com cada número elevado ao quadrado (x ** 2).
---

 **REDUCE()**

1. Dado o array `const valores = [100, 200, 50, 150];`, calcule o total (como se fosse uma soma de compras).
2. Dado o array `const palavras = ["JS", "é", "muito", "legal"];`, use `reduce` para juntar tudo em uma única frase.
3. Dado o array `const numeros = [1, 2, 3, 4, 5];`, use `reduce` para calcular a **média**.
---

**DESAFIOS (misturando funções)**

1. **Dado o array**

const livros = [
  { titulo: "Dom Casmurro", paginas: 300 },
  { titulo: "O Hobbit", paginas: 295 },
  { titulo: "A Revolução dos Bichos", paginas: 112 }
];
```

- Filtre apenas os livros com mais de 200 páginas.
- Crie um array apenas com os títulos.
- Calcule o total de páginas de todos os livros.

2. **Dado o array**

const carrinho = [
  { produto: "Notebook", preco: 2500 },
  { produto: "Mouse", preco: 100 },
  { produto: "Teclado", preco: 200 }
];
```

- Use `map` para criar uma lista de strings no formato `"Produto: X - R$ Y"`.
- Use `reduce` para calcular o valor total da compra.
- Use `find` para encontrar o produto chamado `"Mouse"`